{"version":3,"sources":["components/Circle.js","circles.js","components/GameOver.js","assets/sounds/gameOver.mp3","App.js","index.js"],"names":["Circle","props","style","backgroundColor","color","pointerEvents","disabled","className","active","onClick","click","circles","id","GameOver","score","close","gameEndSound","Audio","endSound","getRndInteger","min","max","Math","floor","random","App","state","current","gameOver","pace","rounds","gameStart","timer","undefined","clickHandler","console","log","setState","stopHandler","nextCircle","nextActive","setTimeout","startHandler","play","clearTimeout","closeHandler","this","map","c","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAceA,EAZA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,gBAAiBF,EAAMG,MACvBC,cAAeJ,EAAMK,SAAW,OAAS,QAE3CC,UAAS,iBAAYN,EAAMO,OAAS,SAAW,IAC/CC,QAASR,EAAMS,SCVRC,EAAQ,CACjB,CAACC,GAAG,EAAER,MAAM,WACZ,CAACQ,GAAG,EAAER,MAAM,WACZ,CAACQ,GAAG,EAAER,MAAM,WACZ,CAACQ,GAAG,EAAER,MAAM,YCUDS,EAZE,SAACZ,GAChB,OACE,qBAAKM,UAAU,UAAf,SACE,sBAAKA,UAAU,cAAf,UACE,4CACA,6CAAgBN,EAAMa,MAAtB,OACA,wBAAQL,QAASR,EAAMc,MAAvB,4BCRO,MAA0B,qCCMrCC,EAAe,IAAIC,MAAMC,GAEvBC,EAAgB,SAACC,EAAKC,GAC1B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,GAGjDK,E,4MACJC,MAAQ,CACNZ,MAAO,EACPa,QAAS,EACTC,UAAU,EACVC,KAAM,KACNC,OAAQ,EACRC,WAAW,G,EAGbC,WAAQC,E,EAERC,aAAe,SAACtB,GACduB,QAAQC,IAAI,gBAAiBxB,GACzB,EAAKc,MAAMC,UAAYf,EAI3B,EAAKyB,SAAS,CACZvB,MAAO,EAAKY,MAAMZ,MAAQ,GAC1BgB,OAAQ,IALR,EAAKQ,e,EASTC,WAAa,WACX,GAAI,EAAKb,MAAMI,QAAU,EACvB,EAAKQ,kBADP,CAKA,IAAIE,EAEJ,GACEA,EAAarB,EAAc,EAAG,SACvBqB,IAAe,EAAKd,MAAMC,SACnC,EAAKU,SAAS,CACZV,QAASa,EACTX,KAAwB,IAAlB,EAAKH,MAAMG,KACjBC,OAAQ,EAAKJ,MAAMI,OAAS,IAG9B,EAAKE,MAAQS,WAAW,EAAKF,WAAY,EAAKb,MAAMG,MACpDM,QAAQC,IAAI,oBAAqB,EAAKV,MAAMC,SAC5CQ,QAAQC,IAAI,iBAAkB,EAAKV,MAAMI,U,EAG3CY,aAAe,WACb,EAAKH,aACL,EAAKF,SAAS,CACZN,WAAW,K,EAIfO,YAAc,WACZtB,EAAa2B,OACbC,aAAa,EAAKZ,OAClB,EAAKK,SAAS,CACZT,UAAU,EACVD,QAAS,EACTI,WAAW,K,EAIfc,aAAe,WACb,EAAKR,SAAS,CACZT,UAAU,EACVd,MAAO,EACPe,KAAM,KACNC,OAAQ,K,4CAIZ,WAAU,IAAD,OACP,OACE,gCACGgB,KAAKpB,MAAME,UACV,cAAC,EAAD,CAAUd,MAAOgC,KAAKpB,MAAMZ,MAAOC,MAAO+B,KAAKD,eAGjD,4CACA,6CAAgBC,KAAKpB,MAAMZ,SAE3B,qBAAKP,UAAU,UAAf,SACGI,EAAQoC,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEE5C,MAAO4C,EAAE5C,MACTQ,GAAIoC,EAAEpC,GACNF,MAAO,kBAAM,EAAKwB,aAAac,EAAEpC,KACjCJ,OAAQ,EAAKkB,MAAMC,UAAYqB,EAAEpC,GACjCN,SAAU,EAAKoB,MAAMK,WALhBiB,EAAEpC,SASb,gCACE,wBAAQN,SAAUwC,KAAKpB,MAAMK,UAAWtB,QAASqC,KAAKJ,aAAtD,wBAGA,wBAAQjC,QAASqC,KAAKR,YAAtB,mC,GAlGQW,aAyGHxB,IChHfyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a7a7cff5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Circle = (props) => {\n  return (\n    <div\n      style={{\n        backgroundColor: props.color,\n        pointerEvents: props.disabled ? \"auto\" : \"none\",\n      }}\n      className={`circle ${props.active ? \"active\" : \"\"}`}\n      onClick={props.click}\n    ></div>\n  );\n};\nexport default Circle;\n","export const circles=[\n    {id:1,color:\"#E94F37\"},\n    {id:2,color:\"#1C89BF\"},\n    {id:3,color:\"#297373\"},\n    {id:4,color:\"#A40E4C\"},\n  ];","import React from \"react\";\n\nconst GameOver = (props) => {\n  return (\n    <div className=\"overLay\">\n      <div className=\"gameOverBox\">\n        <h1>Game Over </h1>\n        <p>Score was : {props.score} </p>\n        <button onClick={props.close}>X(CLOSE)</button>\n      </div>\n    </div>\n  );\n};\n\nexport default GameOver;\n","export default __webpack_public_path__ + \"static/media/gameOver.0c05c6b4.mp3\";","import React, { Component } from \"react\";\nimport Circle from \"./components/Circle\";\nimport { circles } from \"./circles\";\nimport GameOver from \"./components/GameOver\";\nimport endSound from \"./assets/sounds/gameOver.mp3\";\n\nlet gameEndSound = new Audio(endSound);\n\nconst getRndInteger = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nclass App extends Component {\n  state = {\n    score: 0,\n    current: 0,\n    gameOver: false,\n    pace: 1500,\n    rounds: 0,\n    gameStart: false,\n  };\n\n  timer = undefined;\n\n  clickHandler = (id) => {\n    console.log(\"You clicked: \", id);\n    if (this.state.current !== id) {\n      this.stopHandler();\n      return;\n    }\n    this.setState({\n      score: this.state.score + 10,\n      rounds: 0,\n    });\n  };\n\n  nextCircle = () => {\n    if (this.state.rounds >= 5) {\n      this.stopHandler();\n      return;\n    }\n\n    let nextActive;\n\n    do {\n      nextActive = getRndInteger(1, 4);\n    } while (nextActive === this.state.current);\n    this.setState({\n      current: nextActive,\n      pace: this.state.pace * 0.95,\n      rounds: this.state.rounds + 1,\n    });\n\n    this.timer = setTimeout(this.nextCircle, this.state.pace);\n    console.log(\"active circle is \", this.state.current);\n    console.log(\"Round number: \", this.state.rounds);\n  };\n\n  startHandler = () => {\n    this.nextCircle();\n    this.setState({\n      gameStart: true,\n    });\n  };\n\n  stopHandler = () => {\n    gameEndSound.play();\n    clearTimeout(this.timer);\n    this.setState({\n      gameOver: true,\n      current: 0,\n      gameStart: false,\n    });\n  };\n\n  closeHandler = () => {\n    this.setState({\n      gameOver: false,\n      score: 0,\n      pace: 1500,\n      rounds: 0,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.gameOver && (\n          <GameOver score={this.state.score} close={this.closeHandler} />\n        )}\n\n        <h1>Speed Game</h1>\n        <p>Your Score: {this.state.score}</p>\n\n        <div className=\"circles\">\n          {circles.map((c) => (\n            <Circle\n              key={c.id}\n              color={c.color}\n              id={c.id}\n              click={() => this.clickHandler(c.id)}\n              active={this.state.current === c.id}\n              disabled={this.state.gameStart}\n            />\n          ))}\n        </div>\n        <div>\n          <button disabled={this.state.gameStart} onClick={this.startHandler}>\n            Start Game\n          </button>\n          <button onClick={this.stopHandler}> Stop Game </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}